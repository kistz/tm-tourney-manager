// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ClientCache as __ClientCache,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
  type TableHandle as __TableHandle,
} from "spacetimedb";
import { WayPoint as WayPointType } from "./way_point_type";
// Mark import as potentially unused
declare type __keep_WayPointType = WayPointType;
import { Respawn as RespawnType } from "./respawn_type";
// Mark import as potentially unused
declare type __keep_RespawnType = RespawnType;
import { StartLine as StartLineType } from "./start_line_type";
// Mark import as potentially unused
declare type __keep_StartLineType = StartLineType;
import { Scores as ScoresType } from "./scores_type";
// Mark import as potentially unused
declare type __keep_ScoresType = ScoresType;
import { GiveUp as GiveUpType } from "./give_up_type";
// Mark import as potentially unused
declare type __keep_GiveUpType = GiveUpType;
import { LoadingMapStart as LoadingMapStartType } from "./loading_map_start_type";
// Mark import as potentially unused
declare type __keep_LoadingMapStartType = LoadingMapStartType;
import { LoadingMapEnd as LoadingMapEndType } from "./loading_map_end_type";
// Mark import as potentially unused
declare type __keep_LoadingMapEndType = LoadingMapEndType;
import { StartMap as StartMapType } from "./start_map_type";
// Mark import as potentially unused
declare type __keep_StartMapType = StartMapType;
import { EndMapStart as EndMapStartType } from "./end_map_start_type";
// Mark import as potentially unused
declare type __keep_EndMapStartType = EndMapStartType;
import { EndMapEnd as EndMapEndType } from "./end_map_end_type";
// Mark import as potentially unused
declare type __keep_EndMapEndType = EndMapEndType;
import { UnloadingMapStart as UnloadingMapStartType } from "./unloading_map_start_type";
// Mark import as potentially unused
declare type __keep_UnloadingMapStartType = UnloadingMapStartType;
import { UnloadingMapEnd as UnloadingMapEndType } from "./unloading_map_end_type";
// Mark import as potentially unused
declare type __keep_UnloadingMapEndType = UnloadingMapEndType;
import { PlayerConnect as PlayerConnectType } from "./player_connect_type";
// Mark import as potentially unused
declare type __keep_PlayerConnectType = PlayerConnectType;
import { PlayerDisconnect as PlayerDisconnectType } from "./player_disconnect_type";
// Mark import as potentially unused
declare type __keep_PlayerDisconnectType = PlayerDisconnectType;
import { PlayerChat as PlayerChatType } from "./player_chat_type";
// Mark import as potentially unused
declare type __keep_PlayerChatType = PlayerChatType;
import { StartTurn as StartTurnType } from "./start_turn_type";
// Mark import as potentially unused
declare type __keep_StartTurnType = StartTurnType;
import { PlayLoopStart as PlayLoopStartType } from "./play_loop_start_type";
// Mark import as potentially unused
declare type __keep_PlayLoopStartType = PlayLoopStartType;
import { PlayLoopEnd as PlayLoopEndType } from "./play_loop_end_type";
// Mark import as potentially unused
declare type __keep_PlayLoopEndType = PlayLoopEndType;
import { EndRoundStart as EndRoundStartType } from "./end_round_start_type";
// Mark import as potentially unused
declare type __keep_EndRoundStartType = EndRoundStartType;
import { EndRoundEnd as EndRoundEndType } from "./end_round_end_type";
// Mark import as potentially unused
declare type __keep_EndRoundEndType = EndRoundEndType;
import { Podium as PodiumType } from "./podium_type";
// Mark import as potentially unused
declare type __keep_PodiumType = PodiumType;
import { Custom as CustomType } from "./custom_type";
// Mark import as potentially unused
declare type __keep_CustomType = CustomType;


export type WayPoint = { tag: "WayPoint", value: WayPointType };
export type Respawn = { tag: "Respawn", value: RespawnType };
export type StartLine = { tag: "StartLine", value: StartLineType };
export type Scores = { tag: "Scores", value: ScoresType };
export type GiveUp = { tag: "GiveUp", value: GiveUpType };
export type LoadingMapStart = { tag: "LoadingMapStart", value: LoadingMapStartType };
export type LoadingMapEnd = { tag: "LoadingMapEnd", value: LoadingMapEndType };
export type StartMapStart = { tag: "StartMapStart", value: StartMapType };
export type StartMapEnd = { tag: "StartMapEnd", value: StartMapType };
export type EndMapStart = { tag: "EndMapStart", value: EndMapStartType };
export type EndMapEnd = { tag: "EndMapEnd", value: EndMapEndType };
export type UnloadingMapStart = { tag: "UnloadingMapStart", value: UnloadingMapStartType };
export type UnloadingMapEnd = { tag: "UnloadingMapEnd", value: UnloadingMapEndType };
export type PlayerConenct = { tag: "PlayerConenct", value: PlayerConnectType };
export type PlayerDisconnect = { tag: "PlayerDisconnect", value: PlayerDisconnectType };
export type PlayerChat = { tag: "PlayerChat", value: PlayerChatType };
export type StartTurnStart = { tag: "StartTurnStart", value: StartTurnType };
export type StartTurnEnd = { tag: "StartTurnEnd", value: StartTurnType };
export type PlayLoopStart = { tag: "PlayLoopStart", value: PlayLoopStartType };
export type PlayLoopEnd = { tag: "PlayLoopEnd", value: PlayLoopEndType };
export type EndRoundStart = { tag: "EndRoundStart", value: EndRoundStartType };
export type EndRoundEnd = { tag: "EndRoundEnd", value: EndRoundEndType };
export type PodiumStart = { tag: "PodiumStart", value: PodiumType };
export type PodiumEnd = { tag: "PodiumEnd", value: PodiumType };
export type Custom = { tag: "Custom", value: CustomType };
export type Legacy = { tag: "Legacy", value: CustomType };

